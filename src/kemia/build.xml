<?xml version="1.0" encoding="utf-8"?>

<project name="kemia" default="usage">
	<tstamp/>
	<property name="base.dir" location="." />
	<property name="build.dir" value="${base.dir}/build" />
	<property name="test.dir" location="${base.dir}/test/java" />
	<property name="doc.dir" value="${base.dir}/docs" />
	<property name="jsdoc.dir" value="${base.dir}/third-party/jsdoc-toolkit" />
	<property name="closure-library.dir" value="${base.dir}/third-party/closure/closure" />
	<property name="closure-compiler.jar" value="${base.dir}/third-party/closure-compiler/compiler.jar" />
	<property name="js-src.dir" value="${base.dir}/kemia" />
	<property name="selenium-server.jar" value="${base.dir}/third-party/selenium-server-1.0.3/selenium-server.jar" />
	<property name="selenium-java-client.jar" value="${base.dir}/third-party/selenium-java-client-driver-1.0.1/selenium-java-client-driver.jar" />
	<property name="junit.jar" value="${base.dir}/third-party/junit/junit-4.8.2.jar" />
	<property name="plovr.jar" value="${base.dir}/third-party/plovr/plovr.jar" />
	<property name="plover.config" value="${base.dir}/kemia/plovr-config.js" />
	<property name="versioned.plover.config" value="${base.dir}/kemia/temp-plovr-config.js" />

	<path id="classpath.test">
		<pathelement location="${selenium-java-client.jar}" />
		<pathelement location="${junit.jar}" />
		<pathelement location="${test.dir}" />
	</path>

	<target name="compile-test">
		<delete>
			<fileset dir="${test.dir}" includes="**/*.class" />
		</delete>
		<javac srcdir="${test.dir}">
			<classpath refid="classpath.test" />
		</javac>
	</target>
	
	<available file=".git" type="dir" property="git.present"/>

	<target name="git.revision" if="git.present">
	    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
	        <arg value="describe"/>
	    </exec>
		<echo>"version:  ${git.revision}"</echo>
	</target>

	<target name="start-selenium-server">
		<java jar="${selenium-server.jar}" fork="true" spawn="true">
			<arg line="-timeout 30" />
			<jvmarg value="-Dhttp.proxyHost=proxy.corporate.com" />
			<jvmarg value="-Dhttp.proxyPort=3128" />
		</java>
	</target>

	<target name="stop-selenium-server">
		<get taskname="selenium-shutdown" src="http://localhost:4444/selenium-server/driver/?cmd=shutDownSeleniumServer" dest="result.txt" ignoreerrors="true" />
		<echo taskname="selenium-shutdown" message="DGF Errors during shutdown are expected" />
	</target>

	<target name="test" description="Start Selenium ; Run Junit tests ; stop Selenium">
		<parallel>
			<antcall target="start-selenium-server">
			</antcall>
			<sequential>
				<echo taskname="waitfor" message="Wait for server launch" />
				<waitfor maxwait="2" maxwaitunit="minute" checkevery="100">
					<http url="http://localhost:4444/selenium-server/driver/?cmd=testComplete" />
				</waitfor>
				<antcall target="run-junit">
				</antcall>
				<antcall target="stop-selenium-server">
				</antcall>
			</sequential>
		</parallel>
	</target>

	<target name="run-junit" depends="compile-test">
		<junit>
			<classpath refid="classpath.test" />
			<formatter type="brief" usefile="false" />
			<test name="com.kemia.TestRunner" />
		</junit>
	</target>

	<!-- Prepare for use in NodeJs -->
	<macrodef name="addnamespaces">
		<attribute name="inputfile" />
		<attribute name="outputfile" />
		<sequential>
			<exec executable="python" failonerror="true" logError="true">
				<arg value="scripts/addnamespaces.py" />
				<arg value='${build.dir}/@{inputfile}' />
				<arg value='${build.dir}/@{outputfile}' />
			</exec>
		</sequential>
	</macrodef>

	<target name="clean" description="delete generated files">
		<delete dir="${build.dir}" />
		<delete dir="${doc.dir}" />
	</target>

	<target name="build-deps" description="rebuild deps.js file">
		<exec executable="python" failonerror="true" logError="true" output="${js-src.dir}/deps.js">
			<arg value="${closure-library.dir}/bin/calcdeps.py" />
			<arg line='-p "${closure-library.dir}"' />
			<arg line='-p "${js-src.dir}"' />
			<arg line="-o deps" />
		</exec>
	</target>

	<target name="build-docs" description="build the JsDoc documentation">
		<exec executable="java" failonerror="true" logError="true" output="${base.dir}/jsdoc.log">
			<arg line="-jar ${jsdoc.dir}/jsrun.jar ${jsdoc.dir}/app/run.js -r=10 ${js-src.dir} -t=${jsdoc.dir}/templates/kemia/ -d=${doc.dir}" />
		</exec>
	</target>
	
	<target name="set-version" depends="git.revision">
		  <copy file="${plover.config}" tofile="${versioned.plover.config}"/> 
		  <replace file="${versioned.plover.config}" token="%REVISION%" value="${git.revision}" />
		  <replace file="${versioned.plover.config}" token="%TIMESTAMP%" value="${TODAY}" />
	</target>
	
	<target name="compile" description="compile with plovr" depends="set-version">
	       <java jar="${plovr.jar}"
	           fork="true"
	           failonerror="true"
	           maxmemory="512m"
	       	   output="${build.dir}/kemia.js"
	       	   logError="true"
	           >
	         <arg value="build"/>
	         <arg value="${versioned.plover.config}"/>
	         <classpath>
	           <pathelement location="${plovr.jar}"/>
	         </classpath>
	       </java>
		 <delete file="${versioned.plover.config}" />
	</target>

	<target name="usage" description="Display main targets by running 'ant -projecthelp'">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
		</java>
	</target>

</project>
